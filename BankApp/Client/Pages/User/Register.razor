@page "/register"
@layout MainLayout
@inject Microsoft.Extensions.Localization.IStringLocalizer<Register> _localizer
@using Blazored.FluentValidation;


<EditForm Model="@_registerUserModel" OnValidSubmit="SubmitAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator" />
    <MudGrid>
        <MudItem xs="12">
            <div class="d-flex justify-center">
                <MudText Typo="Typo.h4">@_localizer["Register"]</MudText>
            </div>
        </MudItem>
        <MudItem xs="12">
            <div class="d-flex justify-center">
                <MudText>@_localizer["Already have an account?"] <MudLink Href="/login">@_localizer["Sign In"]</MudLink></MudText>
            </div>
        </MudItem>
        <MudItem xs="12">
            <MudTextField For="@(() => _registerUserModel.Username)" @bind-Value="_registerUserModel.Username" Label="@_localizer["User Name"]" />
        </MudItem>
        <MudItem xs="12" sm="6" md="6">
            <MudTextField For="@(() => _registerUserModel.FirstName)" @bind-Value="_registerUserModel.FirstName" Label="@_localizer["First Name"]" />
        </MudItem>
        <MudItem xs="12" sm="6" md="6">
            <MudTextField For="@(() => _registerUserModel.LastName)" @bind-Value="_registerUserModel.LastName" Label="@_localizer["Last Name"]" />
        </MudItem>
        <MudItem xs="12" sm="6" md="6">
            <MudTextField T="string" Label="@_localizer["E-mail"]" @bind-Value="_registerUserModel.Email" For="@(() => _registerUserModel.Email)" />
        </MudItem>
        <MudItem xs="12" sm="6" md="6">
            <MudTextField For="@(() => _registerUserModel.Password)" InputType="@_passwordInput" Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="TogglePasswordVisibility" @bind-Value="_registerUserModel.Password" Label="@_localizer["Password"]" />
        </MudItem>
        <MudItem xs="12" Class="d-flex justify-center">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Disabled="@(!Validated)" Color="Color.Primary" Size="Size.Large" Style="width: 100%;">@_localizer["Register"]</MudButton>
        </MudItem>
    </MudGrid>
</EditForm>

@code{
    private FluentValidationValidator _fluentValidationValidator = new();
    private bool Validated => _fluentValidationValidator.Validate(options => { options.IncludeAllRuleSets(); });
    private RegisterDto _registerUserModel { get; set; } = new();
    [CascadingParameter] private MudDialogInstance MudDialog { get; set; } = new();

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task SubmitAsync()
    {
        var response = await _httpClient.PostAsJsonAsync("api/account/register", _registerUserModel);

        if (!response.IsSuccessStatusCode)
        {
            _snackBar.Add("Error registering user!", Severity.Error);
        }
        else
        {
            _snackBar.Add("Success", Severity.Success);
            _navigationManager.NavigateTo("/login");
            _registerUserModel = new();
            StateHasChanged();
        }
    }

    private bool _passwordVisibility;
    private InputType _passwordInput = InputType.Password;
    private string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    private void TogglePasswordVisibility()
    {
        if (_passwordVisibility)
        {
            _passwordVisibility = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _passwordVisibility = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }
}