@page "/login"
@layout MainLayout
@inject Microsoft.Extensions.Localization.IStringLocalizer<Login> _localizer
@inject AuthenticationStateProvider _stateProvider
@inject AuthService _authService
@using Blazored.FluentValidation
@using Microsoft.AspNetCore.Components.Authorization;
@using MudBlazor;
@using System.Security.Claims;
@using System.Threading.Tasks;

<EditForm Model="@_tokenModel" OnValidSubmit="SubmitAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator" />
    <MudGrid>
        <DataAnnotationsValidator />
        <MudItem xs="12">
            <div class="d-flex justify-center">
                <MudText Typo="Typo.h4">@_localizer["Log in"]</MudText>
            </div>
        </MudItem>
        <MudItem xs="12">
            <div class="d-flex justify-center">
                <MudText>@_localizer["Welcome back!"]</MudText>
            </div>
        </MudItem>
        <MudItem xs="12">
            <div class="d-flex justify-center">
                <MudText>@_localizer["Don't have an account?"] <MudLink Href="/register">@_localizer["Register here"]</MudLink></MudText>
            </div>
        </MudItem>
        <MudItem xs="12">
            <MudTextField T="string" Label="@_localizer["Username"]" Variant="Variant.Outlined"
                          @bind-Value="_tokenModel.Username" For="@(() => _tokenModel.Username)" />
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="@_localizer["Password"]" Variant="Variant.Outlined"
                          @bind-Value="_tokenModel.Password" For="@(() => _tokenModel.Password)"
                          InputType="@_passwordInput" Adornment="Adornment.End" AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="TogglePasswordVisibility" />
        </MudItem>
        <MudItem xs="12" Class="d-flex justify-space-between align-center">
            <MudCheckBox T="bool" Label="@_localizer["Remember me?"]" Color="Color.Primary" Class="ml-n1"></MudCheckBox> <MudLink Href="/account/forgot-password">@_localizer["Forgot password?"]</MudLink>
        </MudItem>
        <MudItem xs="12" Class="d-flex justify-center">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Disabled="@(!Validated)" Color="Color.Primary" Size="Size.Large" Style="width: 100%;">@_localizer["Sign In"]</MudButton>
        </MudItem>
    </MudGrid>
</EditForm>

@code{
    private FluentValidationValidator _fluentValidationValidator;
    private bool Validated => _fluentValidationValidator.Validate(options => { options.IncludeAllRuleSets(); });
    private LoginDto _tokenModel = new();

    protected override async Task OnInitializedAsync()
    {
        var state = await _stateProvider.GetAuthenticationStateAsync();
        if (state != new AuthenticationState(new ClaimsPrincipal(new ClaimsIdentity())))
        {
            //_navigationManager.NavigateTo("/");
        }
    }

    private async Task SubmitAsync()
    {
        var result = await _authService.Login(_tokenModel);
        if (!result.Status)
        {
            _snackBar.Add(result.Message, Severity.Error);
        }
        else
        {
            _navigationManager.NavigateTo("/");
        }
    }

    private bool _passwordVisibility;
    private InputType _passwordInput = InputType.Password;
    private string _passwordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePasswordVisibility()
    {
        if (_passwordVisibility)
        {
            _passwordVisibility = false;
            _passwordInputIcon = Icons.Material.Filled.VisibilityOff;
            _passwordInput = InputType.Password;
        }
        else
        {
            _passwordVisibility = true;
            _passwordInputIcon = Icons.Material.Filled.Visibility;
            _passwordInput = InputType.Text;
        }
    }

    private void FillAdministratorCredentials()
    {
        _tokenModel.Username = "mukesh@blazorhero.com";
        _tokenModel.Password = "123Pa$$word!";
    }

    private void FillBasicUserCredentials()
    {
        _tokenModel.Username = "john@blazorhero.com";
        _tokenModel.Password = "123Pa$$word!";
    }
}